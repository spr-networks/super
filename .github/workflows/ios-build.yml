name: iOS Build

on:
  push:
    tags:
      - 'ios*' 
    #branches: [ main, dev ]
  pull_request:
    branches: [ main ]
#  release:
#    types: [published]

jobs:
  ios-build:
    name: iOS Build
    runs-on: macOS-13
#    defaults:
#      run:
#        working-directory: frontend
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.0.1.app
#        run: sudo xcode-select -s /Applications/Xcode_13.4.1.app

      - name: Get Xcode version
        run: xcode-select -p

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install --frozen-lockfile

      - name: Restore buildcache
        uses: mikehardy/buildcache-action@v1
        continue-on-error: true

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            frontend/ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-cache-${{ hashFiles('frontend/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-cache-

      - name: Install Pods
        working-directory: ./frontend
        run: yarn setup:ios

      - name: Build iOS App
        uses: yukiarrr/ios-build-action@v1.11.0
        with:
          project-path: frontend/ios/spr.xcodeproj
          p12-base64: ${{ secrets.IOS_P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
          code-signing-identity: "iPhone Distribution"
          team-id: ${{ secrets.IOS_TEAM_ID }}
          certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          workspace-path: frontend/ios/spr.xcworkspace

      - name: Verify build
        run: md5 output.ipa
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: SPR iOS IPA
#          path: "output.ipa"
      - name: "Upload app to TestFlight"
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: "output.ipa"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
